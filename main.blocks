<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="0sxXre3s3n!hR:|63Apj" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="{v8M4;te`.E8Z[f;`h~J" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace MyGrove {" line1="    function lcdWriteRegister(reg: number, val: number) {" line2="        let lcdAddr = 0x3e" line3="        let cmd = (reg &lt;&lt; 8) | val" line4="        pins.i2cWriteNumber(lcdAddr, cmd, NumberFormat.UInt16BE)" line5="    }" line6="" line7="    //% block=&quot;initialize&quot;" line8="    export function lcdInit() {" line9="        basic.pause(30)" line10="        lcdWriteRegister(0x80, 0x20)" line11="        basic.pause(1);" line12="        lcdWriteRegister(0x80, 0x0c)" line13="        basic.pause(1)" line14="        lcdClearScreen()" line15="    }" line16="" line17="    //% block=&quot;clear screen&quot;" line18="    export function lcdClearScreen() {" line19="        lcdWriteRegister(0x80, 0x01)" line20="        basic.pause(2)" line21="    }" line22="" line23="    //% block=&quot;Show string |%text|&quot;" line24="    export function lcdWriteText(text: string) {" line25="        for (let index = 0; index &lt;= text.length; index++) {" line26="            lcdWriteRegister(0x40, text.charCodeAt(index))" line27="        }" line28="    }" line29="}" numlines="30"></mutation></block></statement></block><block type="device_forever" id="}EIp)+[_X-[^i@995Q_;" x="640" y="0"></block></xml>